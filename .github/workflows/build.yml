name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

jobs:

  build:
    
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64,
#               arm64
        ]
        python_version: [
#          "3.9",
          "3.10",
#          "3.11"
        ]
#        llvm_version: ["15.0.4"]
        exclude:
          - os: ubuntu-latest
            arch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Build wheel
        run: |
          python -m pip install -r requirements.txt
          python -m pip wheel .

          mkdir -p ${{ github.sha }}
          mv *.whl ${{ github.sha }}/

      - name: Upload an artifact
        uses: actions/upload-artifact@v3
        if: github.event_name == 'push'
        with:
          if-no-files-found: error
          name: build_artifact
          path: ${{ github.sha }}

#  upload-tarballs:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    needs: [build]
#
#    if: ${{ github.event_name == 'push' }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Checkout submodules
#        run: |
#          git submodule update --init --recursive --depth 1
#
#      - name: Download artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: build_artifact
#          path: ${{ github.sha }}
#
#      - name: Set up a release page
#        id: setup_release
#        run: |
#          LLVM_VER="15.0.4"
#          tag_name="llvm-$LLVM_VER"
#          release_title="LLVM ${LLVM_VER}"
#          echo "LLVM ${LLVM_VER} created at $(date)" > body.md
#          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
#          echo "release_title=${release_title}" >> $GITHUB_OUTPUT
#
#      - name: Upload tarballs
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "${{ github.sha }}/*.whl"
#          bodyFile: body.md
#          token: "${{ secrets.SHARK_PY_CI }}"
#          tag: "${{ steps.setup_release.outputs.tag_name }}"
#          name: "${{ steps.setup_release.outputs.release_title }}"
#          removeArtifacts: true
#          allowUpdates: true
#          replacesArtifacts: true
#
