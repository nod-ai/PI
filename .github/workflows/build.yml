name: Build

on:
  workflow_run:
    workflows: [ "Test" ]
    types:
      - completed
    branches: [ main ]
  workflow_dispatch:
    branches:
      - main

jobs:

  build:
    
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        arch: [ x86_64 ]
        python_version: [ "3.10" ]
        exclude:
          - os: ubuntu-latest
            arch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Build wheel
        run: |
          python -m pip wheel . \
            --wheel-dir wheelhouse \
            --pre torch-mlir torchvision \
            -f https://llvm.github.io/torch-mlir/package-index/ \
            --extra-index-url https://download.pytorch.org/whl/nightly/cpu
          
          mkdir -p ${{ github.sha }}
          mv wheelhouse/PI*.whl ${{ github.sha }}/

      - name: Upload an artifact
        uses: actions/upload-artifact@v3
        if: github.event_name == 'push'
        with:
          if-no-files-found: error
          name: build_artifact
          path: ${{ github.sha }}

  upload-tarballs:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    needs: [ build ]

    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_artifact
          path: ${{ github.sha }}

      - name: Set up a release page
        id: setup_release
        run: |
          PI_VERSION=$(python setup.py --version)
          tag_name="$PI_VERSION"
          release_title="PI $PI_VERSION"
          echo "PI $PI_VERSION created at $(date)" > body.md
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "release_title=${release_title}" >> $GITHUB_OUTPUT

      - name: Upload tarballs
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.sha }}/*.whl"
          bodyFile: body.md
          token: "${{ secrets.PI_CI }}"
          tag: "${{ steps.setup_release.outputs.tag_name }}"
          name: "${{ steps.setup_release.outputs.release_title }}"
          removeArtifacts: true
          allowUpdates: true
          replacesArtifacts: true